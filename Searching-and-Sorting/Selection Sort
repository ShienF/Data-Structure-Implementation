#include <iostream>

/*Go through all the elements of the array to find the smallest one and put it in the current front. 
Start from the next current front and repeat the last step.   */

void swap(int* a, int* b){ //adress is parameter
	int temp;
	temp = *a; //change the value by going to the address
	*a = *b;
	*b = temp;
}


void sort(int list[], int n){
	for(int i=0;i<n-1;i++){ //n-1 rounds 
		int min = i; 
		for(int j=i+1;j<n;j++){ //find the smallest one for 1 round
			if(list[j]<list[min]){
				min = j;
				swap(&list[i],&list[min]); // called by address; swap the smallest one and the current front one 
			}
		}
	}
}


int main(int argc, char** argv) {
	int l[] = {3,5,4,1,-1,0,15,12};
	int len = sizeof(l)/sizeof(l[0]);
	for(int i=0; i< len;i++){
		cout << l[i] << " "; // show every element of the array
	}
	cout << endl;
	
	sort(l, len); //call function
	for(int i=0;i<len; i++){
		cout << c[i]<< " ";
	}
  
	return 0;
}
